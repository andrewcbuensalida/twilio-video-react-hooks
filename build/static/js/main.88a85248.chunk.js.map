{"version":3,"sources":["Lobby.js","Participant.js","Room.js","VideoChat.js","App.js","serviceWorker.js","index.js"],"names":["Lobby","username","handleUsernameChange","roomName","handleRoomNameChange","handleSubmit","connecting","roomOptions","onSubmit","htmlFor","type","id","value","onChange","readOnly","required","className","map","room","name","disabled","Participant","participant","useState","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","publication","track","filter","useEffect","on","kind","v","a","removeAllListeners","videoTrack","attach","current","detach","audioTrack","identity","ref","autoPlay","muted","Room","handleLogout","participants","setParticipants","participantConnected","prevParticipants","participantDisconnected","p","forEach","off","onClick","localParticipant","sid","VideoChat","setUsername","setRoomName","setRoom","setConnecting","setRoomOptions","event","preventDefault","fetch","then","res","json","data","Video","connect","accessToken","video","audio","catch","err","console","error","prevRoom","tracks","trackPub","stop","disconnect","roomOptionsJSON","getRoomOptions","tidyUp","persisted","window","addEventListener","removeEventListener","target","App","role","aria-label","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88a85248.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Lobby.css'\r\n\r\nconst Lobby = ({\r\n\tusername,\r\n\thandleUsernameChange,\r\n\troomName,\r\n\thandleRoomNameChange,\r\n\thandleSubmit,\r\n\tconnecting,\r\n\troomOptions,\r\n}) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<h2>Enter a room</h2>\r\n\t\t\t<div>\r\n\t\t\t\t<label htmlFor=\"name\">Username:</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"field\"\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\tonChange={handleUsernameChange}\r\n\t\t\t\t\treadOnly={connecting}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<label htmlFor=\"room\">Room name:</label>\r\n\r\n\t\t\t\t<select\r\n\t\t\t\t\tid=\"room\"\r\n                    className=\"Lobby_select\"\r\n\t\t\t\t\tvalue={roomName}\r\n\t\t\t\t\tonChange={handleRoomNameChange}\r\n\t\t\t\t\treadOnly={connecting}\r\n\t\t\t\t\trequired\r\n\t\t\t\t>\r\n\t\t\t\t\t{roomOptions.map((room) => (\r\n\t\t\t\t\t\t<option key={room.id} value={room.name}>\r\n\t\t\t\t\t\t\t{room.name}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\r\n\t\t\t<button type=\"submit\" disabled={connecting}>\r\n\t\t\t\t{connecting ? \"Connecting\" : \"Join\"}\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Lobby;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Participant = ({ participant }) => {\r\n\tconst [videoTracks, setVideoTracks] = useState([]);\r\n\tconst [audioTracks, setAudioTracks] = useState([]);\r\n\r\n\tconst videoRef = useRef();\r\n\tconst audioRef = useRef();\r\n\r\n\tconst trackpubsToTracks = (trackMap) =>\r\n\t\tArray.from(trackMap.values())\r\n\t\t\t.map((publication) => publication.track)\r\n\t\t\t.filter((track) => track !== null);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetVideoTracks(trackpubsToTracks(participant.videoTracks));\r\n\t\tsetAudioTracks(trackpubsToTracks(participant.audioTracks));\r\n\r\n\t\tconst trackSubscribed = (track) => {\r\n\t\t\tif (track.kind === \"video\") {\r\n\t\t\t\tsetVideoTracks((videoTracks) => [...videoTracks, track]);\r\n\t\t\t} else if (track.kind === \"audio\") {\r\n\t\t\t\tsetAudioTracks((audioTracks) => [...audioTracks, track]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst trackUnsubscribed = (track) => {\r\n\t\t\tif (track.kind === \"video\") {\r\n\t\t\t\tsetVideoTracks((videoTracks) =>\r\n\t\t\t\t\tvideoTracks.filter((v) => v !== track)\r\n\t\t\t\t);\r\n\t\t\t} else if (track.kind === \"audio\") {\r\n\t\t\t\tsetAudioTracks((audioTracks) =>\r\n\t\t\t\t\taudioTracks.filter((a) => a !== track)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tparticipant.on(\"trackSubscribed\", trackSubscribed);\r\n\t\tparticipant.on(\"trackUnsubscribed\", trackUnsubscribed);\r\n\r\n\t\treturn () => {\r\n\t\t\tsetVideoTracks([]);\r\n\t\t\tsetAudioTracks([]);\r\n\t\t\tparticipant.removeAllListeners();\r\n\t\t};\r\n\t}, [participant]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst videoTrack = videoTracks[0];\r\n\t\tif (videoTrack) {\r\n\t\t\t// can do this a different way too. https://www.youtube.com/watch?v=K02SnxY6c_0 at time 1:29:32 append child\r\n\t\t\tvideoTrack.attach(videoRef.current);\r\n\t\t\treturn () => {\r\n\t\t\t\tvideoTrack.detach();\r\n\t\t\t};\r\n\t\t}\r\n\t}, [videoTracks]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst audioTrack = audioTracks[0];\r\n\t\tif (audioTrack) {\r\n\t\t\taudioTrack.attach(audioRef.current);\r\n\t\t\treturn () => {\r\n\t\t\t\taudioTrack.detach();\r\n\t\t\t};\r\n\t\t}\r\n\t}, [audioTracks]);\r\n\r\n\treturn (\r\n\t\t<div className=\"participant\">\r\n\t\t\t<h3>{participant.identity}</h3>\r\n\t\t\t<video ref={videoRef} autoPlay={true} />\r\n\t\t\t<audio ref={audioRef} autoPlay={true} muted={true} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Participant;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Participant from \"./Participant\";\r\n\r\nconst Room = ({ roomName, room, handleLogout }) => {\r\n\tconst [participants, setParticipants] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst participantConnected = (participant) => {\r\n\t\t\tsetParticipants((prevParticipants) => [\r\n\t\t\t\t...prevParticipants,\r\n\t\t\t\tparticipant,\r\n\t\t\t]);\r\n\t\t};\r\n\r\n\t\tconst participantDisconnected = (participant) => {\r\n\t\t\tsetParticipants((prevParticipants) =>\r\n\t\t\t\tprevParticipants.filter((p) => p !== participant)\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\troom.on(\"participantConnected\", participantConnected);\r\n\t\troom.on(\"participantDisconnected\", participantDisconnected);\r\n\t\troom.participants.forEach(participantConnected);\r\n\t\treturn () => {\r\n\t\t\troom.off(\"participantConnected\", participantConnected);\r\n\t\t\troom.off(\"participantDisconnected\", participantDisconnected);\r\n\t\t};\r\n\t}, [room]);\r\n\r\n\treturn (\r\n\t\t<div className=\"room\">\r\n\t\t\t<h2>Room: {roomName}</h2>\r\n\t\t\t<button onClick={handleLogout}>Log out</button>\r\n\t\t\t<div className=\"local-participant\">\r\n\t\t\t\t{room ? (\r\n\t\t\t\t\t<Participant\r\n\t\t\t\t\t\tkey={room.localParticipant.sid}\r\n\t\t\t\t\t\tparticipant={room.localParticipant}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\"\"\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<h3>Remote Participants</h3>\r\n\t\t\t<div className=\"remote-participants\">\r\n\t\t\t\t{participants.map((participant) => (\r\n\t\t\t\t\t<Participant\r\n\t\t\t\t\t\tkey={participant.sid}\r\n\t\t\t\t\t\tparticipant={participant}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Room;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Video from \"twilio-video\";\r\nimport Lobby from \"./Lobby\";\r\nimport Room from \"./Room\";\r\n\r\nconst EXPRESS_ENDPOINT =\r\n\tprocess.env.NODE_ENV === \"production\" ? \"\" : \"http://localhost:5000\";\r\n\r\nconst VideoChat = () => {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [roomName, setRoomName] = useState(\"\");\r\n\tconst [room, setRoom] = useState(null);\r\n\tconst [connecting, setConnecting] = useState(false);\r\n\tconst [roomOptions, setRoomOptions] = useState([]);\r\n\r\n\tconst handleUsernameChange = (event) => {\r\n\t\tsetUsername(event.target.value);\r\n\t};\r\n\r\n\tconst handleRoomNameChange = (event) => {\r\n\t\tsetRoomName(event.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetConnecting(true);\r\n\t\tconst data = await fetch(\r\n\t\t\t`${EXPRESS_ENDPOINT}?identity=${username}&room=${roomName}`\r\n\t\t).then((res) => res.json());\r\n\r\n\t\tVideo.connect(data.accessToken, {\r\n\t\t\tname: roomName,\r\n\t\t\tvideo: true,\r\n\t\t\taudio: true,\r\n\t\t})\r\n\t\t\t.then((room) => {\r\n\t\t\t\tsetConnecting(false);\r\n\t\t\t\tsetRoom(room);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t\tsetConnecting(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleLogout = () => {\r\n\t\tsetRoom((prevRoom) => {\r\n\t\t\tif (prevRoom) {\r\n\t\t\t\tprevRoom.localParticipant.tracks.forEach((trackPub) => {\r\n\t\t\t\t\ttrackPub.track.stop();\r\n\t\t\t\t});\r\n\t\t\t\tprevRoom.disconnect();\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getRoomOptions() {\r\n\t\t\tsetRoomOptions([{ id: 1, name: \"Loading...\" }]);\r\n\t\t\tconst roomOptionsJSON = await fetch(\r\n\t\t\t\t`${EXPRESS_ENDPOINT}/roomOptions`\r\n\t\t\t);\r\n\t\t\tconst roomOptions = await roomOptionsJSON.json();\r\n\t\t\tsetRoomOptions(roomOptions);\r\n\t\t}\r\n\r\n\t\tgetRoomOptions();\r\n\r\n\t\tif (room) {\r\n\t\t\tconst tidyUp = (event) => {\r\n\t\t\t\tif (event.persisted) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (room) {\r\n\t\t\t\t\thandleLogout();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\twindow.addEventListener(\"pagehide\", tidyUp);\r\n\t\t\twindow.addEventListener(\"beforeunload\", tidyUp);\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener(\"pagehide\", tidyUp);\r\n\t\t\t\twindow.removeEventListener(\"beforeunload\", tidyUp);\r\n\t\t\t};\r\n\t\t}\r\n\t}, [room]);\r\n\r\n\treturn room ? (\r\n\t\t<Room roomName={roomName} room={room} handleLogout={handleLogout} />\r\n\t) : (\r\n\t\t<Lobby\r\n\t\t\tusername={username}\r\n\t\t\troomName={roomName}\r\n\t\t\thandleUsernameChange={handleUsernameChange}\r\n\t\t\thandleRoomNameChange={handleRoomNameChange}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tconnecting={connecting}\r\n\t\t\troomOptions={roomOptions}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default VideoChat;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport VideoChat from \"./VideoChat\";\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<header>\r\n\t\t\t\t<h1>Video Chat with Hooks</h1>\r\n\t\t\t</header>\r\n\t\t\t<main>\r\n\t\t\t\t<VideoChat />\r\n\t\t\t</main>\r\n\t\t\t<footer>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tMade with{\" \"}\r\n\t\t\t\t\t<span role=\"img\" aria-label=\"React\">\r\n\t\t\t\t\t\t⚛️\r\n\t\t\t\t\t</span>{\" \"}\r\n\t\t\t\t\tby <a href=\"https://twitter.com/philnash\">philnash</a>\r\n\t\t\t\t</p>\r\n\t\t\t</footer>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === \"[::1]\" ||\r\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then((registration) => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"New content is available; please refresh.\"\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then((response) => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\tresponse.headers.get(\"content-type\").indexOf(\"javascript\") ===\r\n\t\t\t\t\t-1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}